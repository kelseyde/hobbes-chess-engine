use crate::tunable_params;

#[rustfmt::skip]
tunable_params! {
    asp_delta                   = (10, 8, 13), 4, 36, 4;
    asp_min_depth               = (4, 4, 4), 0, 8, 1;
    asp_alpha_widening_factor   = (153, 102, 144), 50, 400, 50;
    asp_beta_widening_factor    = (275, 279, 218), 50, 400, 50;
    rfp_max_depth               = (8, 8, 8), 6, 12, 1;
    rfp_base                    = (11, 23, 18), -50, 50, 10;
    rfp_scale                   = (52, 40, 53), 40, 100, 10;
    rfp_improving_scale         = (52, 56, 50), 40, 100, 10;
    rfp_tt_move_noisy_scale     = (18, 26, 16), 0, 70, 10;
    razor_base                  = (290, 312, 303), 200, 500, 25;
    razor_scale                 = (289, 244, 254), 100, 400, 25;
    nmp_min_depth               = (3, 3, 3), 0, 8, 1;
    nmp_margin                  = (17, 27, 29), 0, 80, 10;
    nmp_base_reduction          = (4, 4, 4), 2, 5, 1;
    nmp_depth_divisor           = (3, 3, 3), 1, 4, 1;
    nmp_eval_divisor            = (215, 204, 215), 100, 300, 25;
    nmp_eval_max_reduction      = (4, 4, 4), 2, 6, 1;
    iir_min_depth               = (4, 4, 4), 1, 10, 1;
    iir_tt_depth_offset         = (4, 4, 4), 1, 6, 1;
    hindsight_ext_min_depth     = (1, 1, 1), 1, 5, 1;
    hindsight_ext_min_reduction = (3, 3, 3), 1, 5, 1;
    hindsight_ext_eval_diff     = (-9, -15, -17), -50, 50, 5;
    hindsight_red_min_depth     = (2, 2, 2), 1, 5, 1;
    hindsight_red_min_reduction = (1, 1, 1), 1, 5, 1;
    hindsight_red_eval_diff     = (62, 54, 52), 0, 120, 20;
    dynamic_policy_mult         = (7, 8, 8), 0, 20, 2;
    dynamic_policy_min          = (-87, -85, -90), -100, 0, 25;
    dynamic_policy_max          = (197, 193, 191), 75, 200, 25;
    fp_max_depth                = (8, 8, 8), 4, 10, 1;
    fp_base                     = (170, 162, 149), 50, 250, 25;
    fp_scale                    = (86, 88, 83), 50, 200, 10;
    fp_movecount_mult           = (4, 4, 4), 2, 8, 1;
    fp_history_divisor          = (93, 100, 91), 64, 256, 16;
    lmp_max_depth               = (8, 8, 8), 6, 10, 1;
    lmp_base                    = (2, 2, 2), 1, 5, 1;
    lmp_improving_base          = (3, 3, 3), 1, 5, 1;
    lmp_scale                   = (39, 27, 39), 10, 100, 20;
    lmp_improving_scale         = (98, 96, 89), 10, 100, 20;
    hp_max_depth                = (4, 4, 4), 4, 8, 1;
    hp_scale                    = (-2236, -2121, -2217), -3072, -1024, 128;
    bnp_max_depth               = (6, 6, 6), 4, 10, 1;
    bnp_scale                   = (110, 95, 102), 64, 256, 16;
    pvs_see_max_depth           = (8, 8, 8), 6, 10, 1;
    pvs_see_quiet_scale         = (-65, -38, -54), -72, -36, 12;
    pvs_see_noisy_scale         = (-28, -37, -45), -48, -12, 12;
    pvs_see_quiet_history_div   = (245, 266, 278), 164, 388, 25;
    pvs_see_noisy_history_div   = (220, 261, 262), 164, 388, 25;
    pvs_see_quiet_ttpv_scale    = (22, 27, 26), 0, 36, 6;
    se_min_depth                = (8, 8, 8), 6, 10, 1;
    se_tt_depth_offset          = (3, 3, 3), 1, 6, 1;
    se_beta_scale               = (18, 19, 18), 16, 48, 6;
    se_depth_offset             = (1, 1, 1), 0, 3, 1;
    se_depth_divisor            = (2, 2, 2), 1, 4, 1;
    se_double_ext_margin        = (10, 12, 15), 10, 30, 5;
    lmr_min_depth               = (2, 2, 2), 1, 5, 1;
    lmr_min_moves               = (2, 2, 2), 1, 4, 1;
    lmr_ttpv_base               = (217, 301, 347), 0, 2048, 256;
    lmr_ttpv_tt_score           = (919, 813, 712), 0, 2048, 256;
    lmr_ttpv_tt_depth           = (1104, 908, 636), 0, 2048, 256;
    lmr_cut_node                = (1796, 1826, 1816), 0, 2048, 256;
    lmr_capture                 = (1595, 1415, 1267), 0, 2048, 256;
    lmr_improving               = (854, 617, 744), 0, 2048, 256;
    lmr_shallow                 = (1076, 940, 950), 0, 2048, 256;
    lmr_killer                  = (860, 1151, 1029), 0, 2048, 256;
    lmr_hist_offset             = (533, 260, -99), -2048, 2048, 256;
    lmr_hist_divisor            = (18609, 21689, 20111), 8192, 32768, 2048;
    lmr_mvv_divisor             = (3, 3, 3), 1, 5, 1;
    lmr_extension_divisor       = (4, 4, 4), 1, 6, 1;
    lmr_deeper_base             = (37, 36, 41), 0, 100, 10;
    lmr_deeper_scale            = (500, 507, 531), 350, 600, 50;
    lmr_deeper_div              = (135, 128, 111), 64, 256, 16;
    lmr_cont_hist_bonus_scale   = (221, 208, 190), 80, 280, 40;
    lmr_cont_hist_bonus_offset  = (124, 104, 141), 0, 200, 25;
    lmr_cont_hist_bonus_max     = (1020, 1049, 1151), 1000, 1600, 100;
    lmr_cont_hist_malus_scale   = (226, 227, 162), 80, 280, 40;
    lmr_cont_hist_malus_offset  = (55, 47, 56), 0, 200, 25;
    lmr_cont_hist_malus_max     = (1247, 1231, 1265), 1000, 1600, 100;
    alpha_raise_min_depth       = (2, 2, 2), 0, 6, 1;
    alpha_raise_max_depth       = (12, 12, 12), 8, 16, 1;
    quiet_hist_bonus_scale      = (181, 224, 257), 80, 280, 40;
    quiet_hist_bonus_offset     = (57, 63, 78), 0, 200, 25;
    quiet_hist_bonus_max        = (1065, 1030, 1018), 1000, 1600, 100;
    quiet_hist_malus_scale      = (94, 106, 86), 80, 280, 40;
    quiet_hist_malus_offset     = (51, 32, 2), 0, 200, 25;
    quiet_hist_malus_max        = (1328, 1248, 1383), 1000, 1600, 100;
    capt_hist_bonus_scale       = (225, 218, 232), 80, 280, 40;
    capt_hist_bonus_offset      = (44, 72, 72), 0, 200, 25;
    capt_hist_bonus_max         = (1443, 1471, 1388), 1000, 1600, 100;
    capt_hist_malus_scale       = (82, 148, 133), 80, 280, 40;
    capt_hist_malus_offset      = (101, 88, 99), 0, 200, 25;
    capt_hist_malus_max         = (1143, 1224, 1255), 1000, 1600, 100;
    cont_hist_bonus_scale       = (110, 80, 80), 80, 280, 40;
    cont_hist_bonus_offset      = (182, 179, 185), 0, 200, 25;
    cont_hist_bonus_max         = (1045, 1002, 1024), 1000, 1600, 100;
    cont_hist_malus_scale       = (83, 86, 87), 80, 280, 40;
    cont_hist_malus_offset      = (100, 33, 103), 0, 200, 25;
    cont_hist_malus_max         = (1034, 1159, 1141), 1000, 1600, 100;
    pcm_bonus_scale             = (153, 169, 201), 80, 280, 40;
    pcm_bonus_offset            = (34, 48, 61), 0, 200, 25;
    pcm_bonus_max               = (1445, 1435, 1484), 1000, 1600, 100;
    corr_pawn_weight            = (121, 110, 122), 0, 200, 10;
    corr_non_pawn_weight        = (89, 106, 96), 0, 200, 10;
    corr_major_weight           = (84, 79, 82), 0, 200, 10;
    corr_minor_weight           = (119, 110, 112), 0, 200, 10;
    corr_counter_weight         = (118, 118, 115), 0, 200, 10;
    corr_follow_up_weight       = (87, 84, 91), 0, 200, 10;
    see_value_pawn              = (105, 99, 103), 50, 150, 10;
    see_value_knight            = (240, 284, 306), 200, 500, 50;
    see_value_bishop            = (297, 268, 302), 200, 500, 50;
    see_value_rook              = (563, 521, 492), 400, 700, 50;
    see_value_queen             = (881, 916, 905), 800, 1200, 50;
    scale_value_knight          = (471, 477, 446), 300, 500, 25;
    scale_value_bishop          = (442, 413, 431), 300, 500, 25;
    scale_value_rook            = (629, 644, 667), 500, 700, 25;
    scale_value_queen           = (1238, 1275, 1239), 1000, 1400, 25;
    material_scaling_base       = (26755, 26523, 26656), 10000, 40000, 150;
    qs_futility_threshold       = (153, 148, 156), 80, 250, 10;
    qs_see_threshold            = (-84, -49, -52), -200, 100, 25;
    movepick_see_threshold      = (-97, -57, -94), -100, 100, 50;
}
